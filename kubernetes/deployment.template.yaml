apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      containers:
      - image: postgres:10-alpine
        name: postgresdb
        env:
        - name: POSTGRES_DB
          value: '${SERVICE_NAME}'
        - name: POSTGRES_USER
          value: '${SERVICE_NAME}'
        - name: POSTGRES_PASSWORD
          value: '${SERVICE_NAME}'
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        imagePullPolicy: Always
      - image: ${IMAGE_NAME}
        name: ${SERVICE_NAME}
        env:
        - name: SPRING_DATASOURCE_PASSWORD
          value: '${SERVICE_NAME}'
        - name: SPRING_DATASOURCE_USERNAME
          value: '${SERVICE_NAME}'
        - name: SPRING_DATASOURCE_URL
          value: 'jdbc:postgresql://localhost:5432/${SERVICE_NAME}'
        envFrom:
        - configMapRef:
            name: ${SERVICE_NAME}-config
        # These may be adjusted, but be mindful please
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1024Mi"
            cpu: "2500m"
        # This is the port your process is listening on in the container
        ports:
        - containerPort: 8080
          name: http
        imagePullPolicy: Always

# Azure Internal Loadbalancer.
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    # Make sure targetPort is the same as 'containerPort' above...
    targetPort: 8080
  selector:
    app: ${SERVICE_NAME}
