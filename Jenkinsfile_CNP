#!groovy
import uk.gov.hmcts.contino.AppPipelineDsl

properties(
    [[$class: 'GithubProjectProperty', projectUrlStr: 'https://github.com/hmcts/ccpay-payment-app.git'],
     pipelineTriggers([[$class: 'GitHubPushTrigger']])]
)

@Library("Infrastructure")

def type = "java"

def product = "payment"

def app = "api"

// Configure branches to sync with master branch
def branchesToSync = ['demo', 'ithc', 'perftest']

def vaultOverrides = [
    'preview': 'aat',
    'hmctsdemo': 'aat',

]

def secrets = [
    'ccpay-${env}': [
        secret('cmc-service-secret', 'S2S_SERVICE_SECRET'),
        secret('citizen-oauth-client-secret', 'OAUTH2_CLIENT_SECRET'),
        secret('freg-idam-generated-user-email-pattern', 'GENERATED_USER_EMAIL_PATTERN'),
        secret('freg-idam-test-user-password', 'TEST_USER_PASSWORD'),
        secret('gov-pay-keys-cmc', 'GOV_PAY_AUTH_KEY_CMC'),
        secret('pci-pal-antenna-client-secret', 'PCI_PAL_ANTENNA_CLIENT_SECRET')
    ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
    [ $class: 'AzureKeyVaultSecret',
      secretType: 'Secret',
      name: secretName,
      version: '',
      envVariable: envVar
    ]
}

// Vars for Kubernetes
env.PACT_BROKER_FULL_URL = 'https://pact-broker.platform.hmcts.net'
env.PACT_BROKER_URL = "pact-broker.platform.hmcts.net"
env.PACT_BROKER_PORT = "443"
env.PACT_BROKER_SCHEME = "https"

withPipeline(type, product, app) {
    enableAksStagingDeployment()
    overrideVaultEnvironments(vaultOverrides)
    loadVaultSecrets(secrets)
    enableDbMigration('ccpay') // for liquibase update
    //enableDockerBuild()
    //installCharts()
    enableSlackNotifications('#cc-payments-tech')
    disableLegacyDeployment()
    onMaster() {
        enablePactAs([AppPipelineDsl.PactRoles.PROVIDER])
    }

    //Sync demo,ithc and perftest with master branch
    syncBranchesWithMaster(branchesToSync)
}
