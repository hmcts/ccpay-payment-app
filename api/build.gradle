buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.5.10")
        classpath("net.serenity-bdd:serenity-single-page-report:2.1.13")
    }
}

plugins {
    id "info.solidsoft.pitest" version '1.15.0'
    id 'au.com.dius.pact' version '4.1.7'
}

apply from: 'liquibase.gradle'
apply plugin: 'net.serenity-bdd.aggregator'

description = ''

sourceSets {

    smokeTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/smokeTest/java')
        }
    }
    functionalTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/functionalTest/java')
        }
    }

    contractTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/contractTest/java')
        }
        resources.srcDir file('src/contractTest/resources')
    }
}

apply plugin: 'idea'
idea {
    module {
        testSourceDirs += project.sourceSets.smokeTest.java.srcDirs
        testSourceDirs += project.sourceSets.smokeTest.resources.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.java.srcDirs
        testSourceDirs += project.sourceSets.functionalTest.resources.srcDirs
        testSourceDirs += project.sourceSets.contractTest.java.srcDirs
        testSourceDirs += project.sourceSets.contractTest.resources.srcDirs
    }
}

sonarqube {
    properties {
        property "sonar.pitest.mode", "reuseReport"
        property "sonar.pitest.reportsDirectory", "build/reports/pitest"
    }
}

def versions = [
        pitest          : '1.15.8',
        gradlePitest    : '1.3.0',
        sonarPitest     : '0.5',
        lombok          : '1.18.32',
        pact_version    : '4.1.7',
        reformS2sClient : '3.1.4',
        serenity        : '2.6.0',
        serenityCucumber: '3.0.1',
]

def javaLoggingVersion = '6.1.4'

dependencies {
    implementation project(':payment-gov-pay-client')
    implementation project(':payment-api-contract')
    implementation project(':payment-model')
    implementation project(':payment-reference-data')
    implementation project(':case-payment-orders-client')
    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: javaLoggingVersion
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: javaLoggingVersion
    implementation group: 'com.github.hmcts', name: 'auth-checker-lib', version: '3.0.3'
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: versions.reformS2sClient
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-hystrix', version: '2.2.10.RELEASE'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.14.0'
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '8.0'
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.7'
    implementation group: 'ch.qos.logback', name: 'logback-core', version: '1.5.7'
    implementation group: 'xerces', name: 'xercesImpl', version: '2.12.2'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.17.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.8.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-webmvc-core', version: '1.8.0'
    implementation 'org.liquibase:liquibase-core'
    implementation(group: 'com.microsoft.azure', name: 'azure-servicebus-spring-boot-starter', version: '2.2.5') {
        exclude(module: 'adal4j')
        exclude(module: 'azure-core-http-netty')
        exclude(module: 'azure-identity')
        exclude(module: 'nanohttpd')
        exclude(module: 'reactor-netty-http-brave')
        exclude(module: 'azure-core')
    }
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-cache'
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.1.8'
    implementation "io.github.openfeign:feign-httpclient:13.2.1"
    implementation group: 'io.github.openfeign', name: 'feign-core', version: '13.2.1'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-openfeign-core'
    implementation group: 'org.ff4j', name: 'ff4j-spring-boot-web-api', version: '1.9'
    implementation group: 'org.ff4j', name: 'ff4j-web', version: '2.0.0'
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.5'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
    implementation(group: 'org.postgresql', name: 'postgresql', version: '42.7.3') {
        exclude(module: 'commons-logging')
        exclude(module: 'slf4j-simple')
    }
    implementation group: 'commons-io', name: 'commons-io', version: '2.16.1'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-mail'
    implementation group: 'org.springframework.retry', name: 'spring-retry'
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign'

    implementation group: 'com.github.hmcts.ccfr-fees-register-app', name: 'fees-register-api-contract', version: '2.4.0'

    contractTestImplementation(group: 'com.github.hmcts.ccfr-fees-register-app', name: 'fees-register-model', version: '2.4.0'){
        exclude group: 'uk.gov.hmcts.fees2.register.data.service.impl.IdamServiceImpl.class'
    }
    //Added this for spring boot upgrade as swagger was not working with the latest version.
    implementation group: 'org.springframework.plugin', name: 'spring-plugin-core', version: '1.2.0.RELEASE'
    implementation(group: 'org.springframework.hateoas', name: 'spring-hateoas') {
        exclude(module: 'spring-plugin-core')
    }
    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }
    testImplementation group: 'org.springframework.security', name: 'spring-security-test'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation group: 'org.hsqldb', name: 'hsqldb', version: '2.7.2'
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock'
    testImplementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    testImplementation group: 'io.rest-assured', name: 'rest-assured'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
    testImplementation group: 'org.testcontainers', name: 'postgresql', version: '1.19.8'
    testImplementation 'org.awaitility:awaitility:3.1.6'
    testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    // smoke
    smokeTestImplementation sourceSets.test.runtimeClasspath
    // functional
    functionalTestImplementation sourceSets.test.runtimeClasspath
    // contract
    contractTestImplementation sourceSets.test.runtimeClasspath
    implementation group: 'com.github.mifmif', name: 'generex', version: '1.0.2'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    functionalTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestCompileOnly group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    smokeTestAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'org.pitest', name: 'pitest', version: versions.pitest
    implementation 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.9.0'
    implementation 'org.codehaus.sonar-plugins:sonar-pitest-plugin:0.5'

    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'spring', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.provider', name: 'junit5spring', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'junit5', version: versions.pact_version
    contractTestImplementation group: 'au.com.dius.pact.consumer', name: 'java8', version: versions.pact_version
    contractTestImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    contractTestImplementation("org.junit.jupiter:junit-jupiter-api:5.10.2")
    contractTestImplementation("org.junit.jupiter:junit-jupiter-engine:5.10.2")
    contractTestImplementation('org.junit.jupiter:junit-jupiter-api:5.10.2')

    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-core', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-cucumber', version: versions.serenityCucumber
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-junit', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-rest-assured', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-spring', version: versions.serenity
    functionalTestImplementation group: 'net.serenity-bdd', name: 'serenity-screenplay', version: versions.serenity
    functionalTestImplementation group: 'io.rest-assured', name: 'xml-path'
    functionalTestImplementation group: 'io.rest-assured', name: 'json-path'
}

test {
    // Base test class for other tests - has no runnable test methods
    exclude 'uk/gov/hmcts/payment/api/v1/**'
}

task smokeTest(type: Test, description: 'Runs the smoke tests', group: 'Verification') {
    testClassesDirs = sourceSets.smokeTest.output.classesDirs
    classpath = sourceSets.smokeTest.runtimeClasspath
}

task functionalTest(type: Test, description: 'Runs the functional tests', group: 'Verification') {
    include "uk/gov/hmcts/payment/functional/**"
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    enableAssertions = true
    scanForTestClasses = true
}

// Serenity Reporting
functionalTest.finalizedBy(aggregate)

project.ext {
    pactVersion = getCheckedOutGitCommitHash()
    pacticipant = 'no'
    pacticipantVersion = getCheckedOutGitCommitHash()
}


task consumerContractTest(type: Test) {
    logger.lifecycle("Running consumer contract Tests")
    useJUnitPlatform()
    include "uk/gov/hmcts/payment/api/controllers/consumer/**"
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    systemProperty 'pact.rootDir', "pacts"
    systemProperty 'pact.provider.version', project.pactVersion

}

task providerContractTest(type: Test) {
    logger.lifecycle("Running contract provider Tests")
    useJUnitPlatform()
    include "uk/gov/hmcts/payment/api/controllers/provider/**"
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
    systemProperty 'pact.rootDir', "pacts"
    if (project.hasProperty('pact.verifier.publishResults')) {
        systemProperty 'pact.verifier.publishResults', project.property('pact.verifier.publishResults')
    }
    systemProperty 'pact.provider.version', project.pactVersion

}

task runProviderPactVerification(type: Test) {
    logger.lifecycle("Runs pact provider Tests")
    systemProperty 'pact.verifier.publishResults','true'
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
}

task runAndPublishConsumerPactTests(type: Test, description: 'Publish pact test to broker.', group: 'Verification') {
    logger.lifecycle("Runs pact consumer Tests")
    testClassesDirs = sourceSets.contractTest.output.classesDirs
    classpath = sourceSets.contractTest.runtimeClasspath
}

runAndPublishConsumerPactTests.dependsOn consumerContractTest

runAndPublishConsumerPactTests.finalizedBy pactPublish

runProviderPactVerification.dependsOn providerContractTest

runProviderPactVerification.finalizedBy pactVerify

serenity {
    reports = ["single-page-html"]
}

static def getCheckedOutGitCommitHash() {
    'git rev-parse --verify --short HEAD'.execute().text.trim()
}

pact {
    broker {
        pactBrokerUrl = System.getenv("PACT_BROKER_FULL_URL") ?: 'http://localhost:80'
    }
    publish {
        pactDirectory = 'api/pacts'
        tags = [System.getenv("PACT_BRANCH_NAME") ?: 'Dev']
        version = project.pactVersion
    }

}

pitest {
    targetClasses = ['uk.gov.hmcts.payment.api.domain.*',
                     'uk.gov.hmcts.payment.api.dto.*',
                     'uk.gov.hmcts.payment.api.email.*',
                     'uk.gov.hmcts.payment.api.exception.*',
                     'uk.gov.hmcts.payment.api.logging.*',
                     'uk.gov.hmcts.payment.api.model.*',
                     'uk.gov.hmcts.payment.api.scheduler.*',
                     'uk.gov.hmcts.payment.api.service.*',
                     'uk.gov.hmcts.payment.api.servicebus.*',
                     'uk.gov.hmcts.payment.api.util.*',
                     'uk.gov.hmcts.payment.api.validators.*']
    excludedClasses = ['uk.gov.hmcts.payment.api.v1.*',
                       'uk.gov.hmcts.payment.api.configuration.*',
                       'uk.gov.hmcts.payment.api.dto.mapper.*',
                       'uk.gov.hmcts.payment.api.exception.*',
                       'uk.gov.hmcts.payment.api.reports.config.*']
    enableDefaultIncrementalAnalysis = true
    threads = 15
    testSourceSets = [sourceSets.test]
    mainSourceSets = [sourceSets.main]
    fileExtensionsToFilter.addAll('xml', 'json')
    outputFormats = ['XML', 'HTML', 'CSV']
    mutationThreshold = 0
    coverageThreshold = 0
    jvmArgs = ['-Xms1G', '-Xmx3G']
    timestampedReports = false
    failWhenNoMutations = false
    detectInlinedCode = true
}

tasks.named("processContractTestResources") {
    duplicatesStrategy = 'include'
}
